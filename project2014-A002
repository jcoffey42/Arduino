/****************************************
 * Use a paperduino as a message board
 * Print the messages to a SainSmart IIC/I2C/TWI 
 * 1602 Serial LCD Module Display For Arduino 
 ****************************************/

 /*
 
 I2C Connection
 *GND (ground)
 *VCC  (+5)
 *SDA  A4
 *SCL  A5
 */

/******************************
include libraries and declare initialize commands before void setup()
******************************/

// include the library code:
#include <Wire.h> //http://arduino.cc/en/reference/wire#.UyhwYflkTh4
//#include <LCD.h> // listed in working example of I2C but not needed here //http://playground.arduino.cc/Code/LCD#.UyhwfvlkTh4
#include <LiquidCrystal_I2C.h>

/*#include <LiquidCrystal.h> //Library for LCD display //https://bitbucket.org/fmalpartida/new-liquidcrystal/downloads
 *see this for how to use https://bitbucket.org/fmalpartida/new-liquidcrystal/wiki/Home
 *new LiquidCrystal is not needed but may be faster
 *Liquidcrystal library at http://arduino.cc/en/Reference/LiquidCrystal#.UyhwBvlkTh5
*/

//some settings for I2C that works with this LCD from http://www.amazon.com/review/R3JN683O0YUPAD/ref=cm_cr_pr_viewpnt#R3JN683O0YUPAD

//define I2C variables for LiquidCrystal_I2C.h
#define I2C_ADDR 0x27 //Address of LCD (Sainsmat shows 0x3f but I found via http://arduino.arigato.cz/I2C_LCD_BackPack_for_1602_and_2004/LCD_16x2_BackPack_v003.ino it was 0x27
#define BACKLIGHT_PIN 3
#define En_pin 2
#define Rw_pin 1
#define Rs_pin 0
#define D4_pin 4
#define D5_pin 5
#define D6_pin 6
#define D7_pin 7

//Initialize LCD
LiquidCrystal_I2C lcd(I2C_ADDR,En_pin,Rw_pin,Rs_pin,D4_pin,D5_pin,D6_pin,D7_pin);
// Pin 13 has an LED connected on most Arduino boards.
// give it a name:
int led = 13;

#include "pitches.h"

// notes in the melody:
int melody[] = {
  NOTE_D4, NOTE_F4, NOTE_AS4, NOTE_D5, NOTE_D5, NOTE_F4, NOTE_C5, NOTE_DS5, NOTE_D5, NOTE_AS4, NOTE_AS3, NOTE_D4, NOTE_F4, NOTE_AS4, NOTE_AS4, NOTE_C4, NOTE_A4, NOTE_C5, NOTE_AS4} ;

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
  8, 8, 8, 4,4,8,4,4,4,4,8,8,8,4,4,8,4,4,4  };


void setup() {

  Serial.begin(115200); //setup serial communications for monitoring

  // set up the LCD's number of columns and rows: 
 
  lcd.begin (20,2,LCD_5x8DOTS);
  lcd.setBacklightPin(BACKLIGHT_PIN,POSITIVE);
  lcd.setBacklight(HIGH);
  lcd.clear();
  //Each message can be 39 characters long
  //                123456789012345678901234567890123456789
  #define message1 "Welcome to the Arduino Badge"
  #define message2 "This is the rotating message board."
  #define message3 "It displays two lines of text"
  #define message4 "and 39 characters"
 

  // iterate over the notes of the melody:
  for (int thisNote = 0; thisNote < 19; thisNote++) {

    // to calculate the note duration, take one second 
    // divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 1000/noteDurations[thisNote];
    tone(8, melody[thisNote],noteDuration);

    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.30;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(8);
// initialize the digital pin as an output.
  pinMode(led, OUTPUT);  
}
}
void loop() {

  Serial.println (message1);
  Serial.println (message2);
  Serial.println (message3);
  Serial.println (message4);
  
  /*digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(1000);               // wait for a second
  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW
  delay(1000);               // wait for a secon
  */
  lcd.clear();// clear LCD for next measurement
  delay(1000);
  lcd.setCursor(1, 0);  //cursor to top left
  lcd.print(message1);     // Centimeter label
 
  lcd.setCursor(1, 1);  //cursor to top left 
  lcd.print(message2);     // Centimeter label

  // scroll 50 positions (string length) to the left 
  // to move it offscreen left:
  for (int positionCounter = 0; positionCounter < 50; positionCounter++) {
    digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)
    delay(150);
    // scroll one position left:
    lcd.scrollDisplayLeft(); 
    digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW
    // wait a bit:
    delay(150);
  }

  delay(2000);

  lcd.clear();// clear LCD for next measurement
  lcd.setCursor(0, 0);  //cursor to top left
  lcd.print(message3);     // Centimeter label  
  lcd.setCursor(0, 1);  //cursor to top left 
  lcd.print(message4);     // Centimeter label

  // scroll 50 positions (string length) to the left 
  // to move it offscreen left:
  for (int positionCounter = 0; positionCounter < 50; positionCounter++) {

    // scroll one position left:
    lcd.scrollDisplayLeft(); 

    // wait a bit:
    delay(300);
  }

  delay(2000);

  
}

